spring.application.name=book-service

spring.config.import=optional:configserver:${CONFIG_SERVICE_URL:http://config-service:8888}
spring.cloud.config.profile=${SPRING_CLOUD_CONFIG_PROFILE:default}
spring.cloud.config.label=${SPRING_CLOUD_CONFIG_LABEL:main}

#server.port=8082

#spring.datasource.url=jdbc:postgresql://localhost:5432/book-service
#spring.datasource.username=postgre
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.postgresql.Driver
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#eureka.instance.hostname=localhost
# Register service with Eureka
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Swagger UI
#springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.path=/v3/api-docs
#springdoc.swagger-ui.display-request-duration=true

# ==== KAFKA COMMON CONFIG ====
#spring.kafka.bootstrap-servers=localhost:9092

# ==== PRODUCER CONFIG ====
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# ==== CONSUMER CONFIG ====
#spring.kafka.consumer.group-id=book-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka configuration
#spring.kafka.topic.book=book-topic
